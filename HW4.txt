Welcome to EV Finder
This project aims to help the user fidn useful information regarding electric vihecles in the market.
The user can compare diffrent EVs across 12 key specifications for EVs.
The outside data source used for this project can be found here https://www.kaggle.com/datasets/geoffnel/evs-one-electric-vehicle-dataset

This project uses the psycopg library to connect with the postgresql database.
The connect_db() function in the python file main.py connects is to the database with the following information
    dbname=final user=postgres password=CS330UNR host=localhost port=5432
    you might need to set up your own postgresql database with the provided schema and data in this folder dound in the HW4_schema and HW4_data file respectively.

4 of the 5 tables are linked by primaray/freign keys. The 5th table user_cars is used for the user to save their searches and use it too look up information from the database on the cars they have listed.
The search from this table is simple, we look to see the logged EV exist in our data source if it is there the user can request so see the data. if the EV does not exist we do not allow the user to edit the tables with existing info in the database to keep our data integrity.

I have included the initial CSV files I create and added to the database.
I added the 4 EVs in the user_cars table from within the program. (in the HW4_data file)

SET UP INSTRUNCTIONS
1. install python3 on your system https://www.python.org/downloads/
2. install psycopg3 library https://www.psycopg.org/psycopg3/docs/basic/install.html
3. install postgresql and pgadmin4 https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
4. add the schema and the data provided in this zip file to your database
5. edit the connect_db() function in the python file final.py to match with the databse you have set up.
    I use dbname=final user=postgres password=CS330UNR host=localhost port=5432
6. run the python file in terminal using python3 main.py
7. A python gui will pop up, enjoy EV finder